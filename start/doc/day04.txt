#day04

논리연산자
==>두 논리값 사이의 관계를 따지는 연산자
	==> 즉, 논리값을 AND, OR, NOT방식으로 관계를 알아보는 연산자
주의사항
	데이터는 반드시 논리값이어야 한다.
	한 번에 한개의 질문만 해야한다. 10<a<20 (x) 10<a; a<20;(o)
	연산자의 결과 역시 논리값만 나온다.
기호
	&	AND	관계
	|	OR	관계

진가표
	데이터1 데이터2 OR    	AND 
	true	true	true	true
	true	false	true	false
	false	true	true	false
	false	false	false	false
	
-절삭연산
----------------------
	&&	AND	관계 -> 데이터1번이 false면 데이터2를 읽을 필요가 있나? 안읽음 -> 절삭
	||	OR	관계 -> 데이터1번이 true 면 데이터2를 읽을 필요가 있나? 안읽음 -> 절삭
	
	boolean bool = (no1 > no2) && (no1++ == no2);
	각각 false 10 10이나온다 (절삭연산 뒷부분을 읽지도 않음)
----------------------

	!	NOT	관계(부정할 때 사용)

----------------------
비트연산자
	c언어는  주소를 직접 이용할 수 있으므로 필요했던 연산자

		  비트연산자의 예
		  10진수20->2진수00010100
		  10진수36->2진수00100100
		  비트연산의 값  00000100
		                      *    <-마크한 부분만 참으료 표시
		  비트연산자의 경우 실제 쓰는 예는 많지 않다.
		  PDF연산자페이지를 보고 참조할 것
	비트의 맨 앞칸은 부호비트임(+,-)
----------------------
시프트연산자
	기호 '>>', '<<' 부호비트 미포함 시프트
		 '>>>'부호비트 포함 시프트
		 '~' 보수화 연산자(단항연산자)
----------------------
3항연산자(조건연산자)
	하나의 명령에 가까운 형식을 갖고있는 연산자의 한 종류
	조건에 따라서 처리할 내용을 구분해서 처리하도록 하는 연산자.
형식
	(조건식)?(조건식이 참일때 실행할 처리내용):(조건식이 거짓일때 실행할 처리내용)
	조건식은 반드시 참, 거짓으로만 만들어지도록 작성해야 한다.
	*if명령을 단순화 시킨 의미를 가진 명령이다.
	모든 연산자가 중첩 처리가 가능하듯, 3항조건 연산자 또한 중첩처리 될 수 있다.
	예를들면, (조건식1)?((조건식2)?(5):(6)):((조건식3)?(7):(8))
	위에서 조건식1이 참이고 조건식2가 참이면 -> 5
	위에서 조건식1이 참이고 조건식2가 거짓이면 -> 6


















